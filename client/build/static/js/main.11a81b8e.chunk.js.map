{"version":3,"sources":["components/Nav.js","logo.png","App.js","config.js","routes/CreateAppointment.js","routes/ScheduledAppointments.js","index.js"],"names":["Nav","props","state","isOpened","handleOpen","bind","console","log","this","setState","className","onClick","to","Component","App","style","maxWidth","margin","padding","src","logo","alt","API_ENDPOINT","CreateAppointment","user","selectedConsultantType","availableSlots","selectedDateTime","selectedAppointmentType","notes","bookingSaved","fetch","then","res","json","catch","e","target","innerText","toLowerCase","a","isError","document","getElementById","display","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","userId","id","consultantType","appointmentType","dateTime","responseJSON","slots","i","length","j","push","slotsByDate","forEach","slot","time","slice","consultantTypes","includes","appointmentTypes","avatar","firstName","lastName","map","handleSelectConsultantType","tabIndex","charAt","toUpperCase","Object","entries","date","moment","format","index","placeholder","value","onChange","handleSubmit","ScheduledAppointments","appointments","appointmentsJSON","err","appointmentId","filter","appointment","handleCancel","render","path","element"],"mappings":"+QAuCeA,EAlCf,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,UAAU,GAEZ,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBALD,EADrB,8CAQE,WACEC,QAAQC,IAAR,iCACAD,QAAQC,IAAIC,KAAKN,MAAME,YAEvBI,KAAKC,SAAS,CAAEN,UAAWK,KAAKN,MAAMC,aAZ1C,oBAcE,WACE,OACE,sBAAKO,UAAU,eAAf,UACE,qBAAKA,UAAU,aACf,qBAAIA,UAAS,eAAUF,KAAKN,MAAMC,UAAY,UAA9C,UACE,qBAAKO,UAAU,OAAOC,QAASH,KAAKJ,WAApC,SACE,mBAAGM,UAAU,gCAEf,cAAC,IAAD,CAAME,GAAG,yBAAT,SACE,oBAAIF,UAAU,eAAd,sCAEF,cAAC,IAAD,CAAME,GAAG,qBAAT,SACE,oBAAIF,UAAU,YAAd,+CA1BZ,GAAyBG,aCLV,MAA0B,iCCM5BC,EAAb,4JACI,WACI,OACE,sBAAKC,MAAO,CAAEC,SAAU,IAAKC,OAAQ,WAAYC,QAAS,SAA1D,UACE,sBAAKR,UAAU,aAAf,UACE,cAAC,EAAD,IACA,qBAAKS,IAAKC,EAAMV,UAAU,WAAWW,IAAI,sBAE3C,cAAC,IAAD,WARZ,GAAyBR,aAcVC,I,yDCpBTQ,EACoC,UCMpCC,G,wDACJ,WAAYtB,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXsB,KAAM,GACNC,uBAAwB,KACxBC,eAAgB,GAChBC,iBAAkB,GAClBC,wBAAyB,GACzBC,MAAO,GACPC,cAAc,GATC,E,qDAcnB,WAAqB,IAAD,OAClBC,MAAM,GAAD,OAAIT,EAAJ,oBACFU,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GACL,EAAKzB,SAAS,CAAEiB,eAAgBQ,OAEjCC,OAAM,eAGTJ,MAAM,GAAD,OAAIT,EAAJ,aACFU,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GACL,EAAKzB,SAAS,CAAEe,KAAMU,OAEvBC,OAAM,iB,wCAMX,SAA2BC,GACzB5B,KAAKC,SAAS,CAAEgB,uBAAwBW,EAAEC,OAAOC,UAAUC,kB,iEAG7D,8BAAAC,EAAA,yDAGOhC,KAAKN,MAAMsB,OACdiB,GAAU,EACVC,SAASC,eAAe,aAAa5B,MAAM6B,QAAU,UAElDpC,KAAKN,MAAMuB,yBACdgB,GAAU,EACVC,SAASC,eAAe,mBAAmB5B,MAAM6B,QAAU,UAExDpC,KAAKN,MAAMyB,mBACdc,GAAU,EACVC,SAASC,eAAe,iBAAiB5B,MAAM6B,QAAU,UAEtDpC,KAAKN,MAAM0B,0BACda,GAAU,EACVC,SAASC,eAAe,oBAAoB5B,MAAM6B,QAAU,UAE1DH,IACFC,SAASC,eAAe,gBAAgB5B,MAAM6B,QAAU,SACxDpC,KAAKC,SAAS,CAAEqB,cAAc,KAE3BW,EAvBP,0CAyB+BV,MAAM,GAAD,OAAIT,EAAJ,iBAAiC,CAC7DuB,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,oBAElBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAU,CACnBzB,MAAOrB,KAAKN,MAAM2B,MAClB0B,OAAQ/C,KAAKN,MAAMsB,KAAKgC,GACxBC,eAAgBjD,KAAKN,MAAMuB,uBAAyB,eACpDiC,gBAAiBlD,KAAKN,MAAM0B,wBAC5B+B,SAAUnD,KAAKN,MAAMyB,qBAxC/B,cAyBUiC,EAzBV,iBA2C2BA,EAAa1B,OA3CxC,eA6CM1B,KAAKC,SAAS,CACZkB,iBAAkB,GAClBC,wBAAyB,GACzBC,MAAO,GACPC,cAAc,IAGhBY,SAASC,eAAe,gBAAgB5B,MAAM6B,QAAU,OACxDF,SAASC,eAAe,aAAa5B,MAAM6B,QAAU,OACrDF,SAASC,eAAe,mBAAmB5B,MAAM6B,QAAU,OAC3DF,SAASC,eAAe,iBAAiB5B,MAAM6B,QAAU,OACzDF,SAASC,eAAe,oBAAoB5B,MAAM6B,QAAU,OAxDlE,kDA0DMtC,QAAQC,IAAR,eACAD,QAAQC,IAAR,MA3DN,0D,0EAgEA,WAGE,IAHQ,IAAD,OAEHsD,EAAQ,GACHC,EAAI,EAAGA,EAAItD,KAAKN,MAAMwB,eAAeqC,OAAQD,IACpD,IAAK,IAAIE,EAAI,EAAGA,EAAIxD,KAAKN,MAAMwB,eAAeoC,GAA1B,eAA+CC,OAAQC,IAEvExD,KAAKN,MAAMwB,eAAeoC,GAA1B,eAA+CE,KAAOxD,KAAKN,MAAMuB,wBAEjEoC,EAAMI,KAAKzD,KAAKN,MAAMwB,eAAeoC,IAK3C,IAAII,EAAc,GAClBL,EAAMM,SAAQ,SAACC,GACTF,EAAYE,EAAKC,KAAKC,MAAM,GAAI,OAGlCJ,EAAYE,EAAKC,KAAKC,MAAM,GAAI,KAAO,IAFvCJ,EAAYE,EAAKC,KAAKC,MAAM,GAAI,KAAKL,KAAKG,MAQ9C,IAAIG,EAAkB,GACtB/D,KAAKN,MAAMwB,eAAeyC,SAAQ,SAACC,GACjCA,EAAKX,eAAeU,SAAQ,SAACV,GACtBc,EAAgBC,SAASf,IAAiBc,EAAgBN,KAAKR,SAKxE,IAAIgB,EAAmB,GAOvB,OANAjE,KAAKN,MAAMwB,eAAeyC,SAAQ,SAACC,GACjCA,EAAKV,gBAAgBS,SAAQ,SAACT,GACvBe,EAAiBD,SAASd,IAAkBe,EAAiBR,KAAKP,SAKzE,iCACE,oDACA,sBAAKhD,UAAU,OAAf,UACE,qBAAKS,IAAKX,KAAKN,MAAMsB,KAAKkD,SACzBlE,KAAKN,MAAMsB,KAAKmD,UAFnB,IAE+BnE,KAAKN,MAAMsB,KAAKoD,SAC7C,sBAAMpB,GAAG,YAAT,8BAEF,sBAAK9C,UAAU,gBAAf,UACE,+BACE,mBAAGA,UAAU,6BADf,mBAEkB,sBAAM8C,GAAG,kBAAT,gDAElB,qBAAK9C,UAAU,SAEf,cAAC,IAAD,CAAiBA,UAAU,mBAA3B,SACG6D,EAAgBM,KAAI,SAACpB,GACpB,OACE,qBAEE/C,UAAS,iBACP,EAAKR,MAAMuB,yBAA2BgC,GAAkB,YAE1D9C,QAAS,SAACyB,GAAD,OAAO,EAAK0C,2BAA2B1C,IAChD2C,SAAS,IANX,SAQsB,OAAnBtB,EACG,KACAA,EAAeuB,OAAO,GAAGC,cAAgBxB,EAAea,MAAM,IAT7Db,WAgBf,gCACE,+BACE,+BACE,mBAAG/C,UAAU,yBAFjB,iBAIgB,sBAAM8C,GAAG,gBAAT,0CAEf0B,OAAOC,QAAQjB,GAAaW,KAAI,YAAoB,IAAD,mBAAjBO,EAAiB,KAAXvB,EAAW,KAClD,OACE,sBAAgBnD,UAAU,gBAA1B,UACE,sBAAKA,UAAU,OAAf,cAAwB2E,IAAOD,GAAME,OAAO,eAC5C,qBAAK5E,UAAU,SAEf,cAAC,IAAD,CAAiBA,UAAU,mBAA3B,SACGmD,EAAMgB,KACL,SAACT,EAAMmB,GAAP,aACEnB,EAAKC,QAAL,UAAcR,EAAM0B,EAAQ,UAA5B,aAAc,EAAkBlB,OAC9B,oBAEE3D,UAAS,iBACP,EAAKR,MAAMyB,mBAAqByC,EAAKC,MAAQ,YAE/C1D,QAAS,WACP,EAAKF,SAAS,CAAEkB,iBAAkByC,EAAKC,QAN3C,SASGgB,IAAOjB,EAAKC,MAAMiB,OAAO,YARrBlB,EAAKZ,WATZ4B,SA0BhB,sBAAK1E,UAAU,gBAAf,UACE,+BACE,+BACE,mBAAGA,UAAU,yBAFjB,oBAImB,sBAAM8C,GAAG,mBAAT,kDACb,IACN,qBAAK9C,UAAU,SACf,eAAC,IAAD,CAAiBA,UAAU,mBAA3B,UACG+D,EAAiBI,KAAI,SAACnB,GAAD,OACpB,qBAEEhD,UAAS,iBACP,EAAKR,MAAM0B,0BAA4B8B,GAAmB,YAE5D/C,QAAS,SAACyB,GAAD,OAAO,EAAK3B,SAAS,CAAEmB,wBAAyB8B,KAL3D,SAOGA,EAAgBsB,OAAO,GAAGC,cAAgBvB,EAAgBY,MAAM,IAN5DZ,MAQL,UAGR,gCACE,+BACE,+BACE,mBAAGhD,UAAU,8BAFjB,WAMA,0BACE8E,YAAY,yBACZC,MAAOjF,KAAKN,MAAM2B,MAClB6D,SAAU,SAACtD,GAAD,OAAO,EAAK3B,SAAS,CAAEoB,MAAOO,EAAEC,OAAOoD,cAGrD,gCACE,qBACE/E,UAAU,cACVC,QAAS,WACP,EAAKgF,gBAHT,kBAQA,sBAAMnC,GAAG,eAAT,6CACChD,KAAKN,MAAM4B,cAAgB,sBAAM0B,GAAG,eAAT,sC,GAjQN3C,cAwQjBU,ICzQFqE,G,MAAb,kDACE,WAAY3F,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX2F,aAAc,MAHC,EADrB,qDAOE,WAAqB,IAAD,OAClB9D,MAAM,GAAD,OAAIT,EAAJ,kBACFU,MAAK,SAAC8D,GAAD,OAAsBA,EAAiB5D,UAC5CF,MAAK,SAAC6D,GACL,EAAKpF,SAAS,CAAEoF,aAAcA,OAE/B1D,OAAM,SAAC4D,SAbd,iEAgBE,WAAmBC,GAAnB,SAAAxD,EAAA,+EAE2BT,MAAM,GAAD,OAAIT,EAAJ,iBAAiC,CAC3DuB,OAAQ,SACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,oBAElBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAU,CACnB0C,oBAbR,cAgBIxF,KAAKC,SAAS,CACZoF,aAAcrF,KAAKN,MAAM2F,aAAaI,QACpC,SAACC,GAAD,OAAiBA,EAAY1C,KAAOwC,OAlB5C,uGAhBF,2EAuCE,WAAU,IAAD,SACP,OACE,iCACE,wDADF,UAEGxF,KAAKN,MAAM2F,oBAFd,aAEG,EAAyBhB,KAAI,SAACqB,GAAD,OAC5B,sBAA0BxF,UAAU,qCAApC,kBACQ2E,IAAOa,EAAYvC,UAAU2B,OAAO,wBAC1C,uBAFF,mBAGmBY,EAAYzC,eAC7B,uBAJF,oBAKoByC,EAAYxC,gBAC9B,uBANF,UAOUwC,EAAYrE,MACpB,uBACA,wBAAQnB,UAAU,oBAAoBC,QAAS,kBAAM,EAAKwF,aAAaD,EAAY1C,KAAnF,sBATQ0C,EAAY1C,cA5ChC,GAA2C3C,cA+D5B+E,IC7DfQ,iBACI,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOD,KAAK,oBAAoBC,QAAS,cAAC,EAAD,MACzC,cAAC,IAAD,CAAOD,KAAK,wBAAwBC,QAAS,cAAC,EAAD,MAC7C,cAAC,IAAD,CACED,KAAK,IACLC,QACE,sBAAMvF,MAAO,CAAEG,QAAS,QAAxB,SACE,iEASdwB,SAASC,eAAe,W","file":"static/js/main.11a81b8e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Nav.scss';\r\n\r\nexport class Nav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpened: false,\r\n    };\r\n    this.handleOpen = this.handleOpen.bind(this)\r\n  }\r\n  handleOpen() {\r\n    console.log(`This is this.state.handleOpen`)\r\n    console.log(this.state.handleOpen)\r\n    \r\n    this.setState({ isOpened: !this.state.isOpened });\r\n  }\r\n  render() {\r\n    return (\r\n      <nav className=\"navContainer\">\r\n        <div className=\"navBlock\"></div>\r\n        <ul className={`nav2 ${this.state.isOpened && 'opened'}`}>\r\n          <div className=\"icon\" onClick={this.handleOpen}>\r\n            <i className=\"fa fa-2x fa-chevron-right\"></i>\r\n          </div>\r\n          <Link to=\"/scheduledappointments\">\r\n            <li className=\"scheduledNav\">Scheduled appointments</li>\r\n          </Link>\r\n          <Link to=\"/createappointment\">\r\n            <li className=\"createNav\">Create an appointment</li>\r\n          </Link>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","export default __webpack_public_path__ + \"static/media/logo.1583679e.png\";","import React, {Component} from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\n\r\nimport Nav from './components/Nav';\r\nimport logo from './logo.png';\r\n\r\nexport class App extends Component {\r\n    render() {\r\n        return (\r\n          <div style={{ maxWidth: 600, margin: '8px auto', padding: '0 1em' }}>\r\n            <div className=\"app-header\">\r\n              <Nav></Nav>\r\n              <img src={logo} className=\"app-logo\" alt=\"Babylon Health\" />\r\n            </div>\r\n            <Outlet />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App\r\n","const API_ENDPOINT =\r\n  process.env.NODE_ENV === 'production' ? '/api/v1' : 'http://localhost:3400/api/v1';\r\n\r\nexport { API_ENDPOINT };\r\n","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport ScrollContainer from 'react-indiana-drag-scroll';\r\n\r\nimport { API_ENDPOINT } from '../config';\r\nimport './CreateAppointment.scss';\r\n\r\nclass CreateAppointment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {},\r\n      selectedConsultantType: 'gp',\r\n      availableSlots: [],\r\n      selectedDateTime: '',\r\n      selectedAppointmentType: '',\r\n      notes: '',\r\n      bookingSaved: false,\r\n    };\r\n    // this.handleSelectConsultantType = this.handleSelectConsultantType.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`${API_ENDPOINT}/availableSlots`)\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        this.setState({ availableSlots: json });\r\n      })\r\n      .catch(() => {\r\n        // TODO: Handle error here\r\n      });\r\n    fetch(`${API_ENDPOINT}/users/1`)\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        this.setState({ user: json });\r\n      })\r\n      .catch(() => {\r\n        // TODO: Handle error here\r\n      });\r\n  }\r\n\r\n  // second method to update selectedConsultantType\r\n  handleSelectConsultantType(e) {\r\n    this.setState({ selectedConsultantType: e.target.innerText.toLowerCase() });\r\n  }\r\n\r\n  async handleSubmit() {\r\n    let isError;\r\n    // could use this method, or have error states which conditionally change display of each error element\r\n    if (!this.state.user) {\r\n      isError = true;\r\n      document.getElementById('userError').style.display = 'inline';\r\n    }\r\n    if (!this.state.selectedConsultantType) {\r\n      isError = true;\r\n      document.getElementById('consultantError').style.display = 'inline';\r\n    }\r\n    if (!this.state.selectedDateTime) {\r\n      isError = true;\r\n      document.getElementById('dateTimeError').style.display = 'inline';\r\n    }\r\n    if (!this.state.selectedAppointmentType) {\r\n      isError = true;\r\n      document.getElementById('appointmentError').style.display = 'inline';\r\n    }\r\n    if (isError) {\r\n      document.getElementById('generalError').style.display = 'inline';\r\n      this.setState({ bookingSaved: false });\r\n    }\r\n    if (!isError) {\r\n      try {\r\n        let responseJSON = await fetch(`${API_ENDPOINT}/appointments`, {\r\n          method: 'POST', // *GET, POST, PUT, DELETE,\r\n          mode: 'cors', // no-cors, *cors, same-origin\r\n          cache: 'no-cache',\r\n          credentials: 'same-origin',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          redirect: 'follow',\r\n          referrerPolicy: 'no-referrer',\r\n          body: JSON.stringify({\r\n            notes: this.state.notes,\r\n            userId: this.state.user.id,\r\n            consultantType: this.state.selectedConsultantType + ' appointment',\r\n            appointmentType: this.state.selectedAppointmentType,\r\n            dateTime: this.state.selectedDateTime,\r\n          }), // body data type must match \"Content-Type\" header\r\n        });\r\n        let response = await responseJSON.json();\r\n\r\n        this.setState({\r\n          selectedDateTime: '',\r\n          selectedAppointmentType: '',\r\n          notes: '',\r\n          bookingSaved: true,\r\n        });\r\n\r\n        document.getElementById('generalError').style.display = 'none';\r\n        document.getElementById('userError').style.display = 'none';\r\n        document.getElementById('consultantError').style.display = 'none';\r\n        document.getElementById('dateTimeError').style.display = 'none';\r\n        document.getElementById('appointmentError').style.display = 'none';\r\n      } catch (err) {\r\n        console.log(`This is err`);\r\n        console.log(err);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // calculate matching slots\r\n    let slots = [];\r\n    for (let i = 0; i < this.state.availableSlots.length; i++) {\r\n      for (let j = 0; j < this.state.availableSlots[i]['consultantType'].length; j++) {\r\n        if (\r\n          this.state.availableSlots[i]['consultantType'][j] === this.state.selectedConsultantType\r\n        ) {\r\n          slots.push(this.state.availableSlots[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    let slotsByDate = {};\r\n    slots.forEach((slot) => {\r\n      if (slotsByDate[slot.time.slice(0, -14)]) {\r\n        slotsByDate[slot.time.slice(0, -14)].push(slot);\r\n      } else {\r\n        slotsByDate[slot.time.slice(0, -14)] = [];\r\n        slotsByDate[slot.time.slice(0, -14)].push(slot);\r\n      }\r\n    });\r\n\r\n    //dynamically display cosultant type buttons based on slots available\r\n    let consultantTypes = [];\r\n    this.state.availableSlots.forEach((slot) => {\r\n      slot.consultantType.forEach((consultantType) => {\r\n        if (!consultantTypes.includes(consultantType)) consultantTypes.push(consultantType);\r\n      });\r\n    });\r\n\r\n    //dynamically getting appointment types based on slots matched. probably should be based on dateTime selected\r\n    let appointmentTypes = [];\r\n    this.state.availableSlots.forEach((slot) => {\r\n      slot.appointmentType.forEach((appointmentType) => {\r\n        if (!appointmentTypes.includes(appointmentType)) appointmentTypes.push(appointmentType);\r\n      });\r\n    });\r\n\r\n    return (\r\n      <main>\r\n        <h1>Create Appointment</h1>\r\n        <div className=\"user\">\r\n          <img src={this.state.user.avatar} />\r\n          {this.state.user.firstName} {this.state.user.lastName}\r\n          <span id=\"userError\">Please Log In</span>\r\n        </div>\r\n        <div className=\"fadeContainer\">\r\n          <h3>\r\n            <i className=\"fas fa-stethoscope fa-lg\"></i>\r\n            Consultant Type <span id=\"consultantError\">Please select a consultant type</span>\r\n          </h3>\r\n          <div className=\"fade\"></div>\r\n\r\n          <ScrollContainer className=\"optionsContainer\">\r\n            {consultantTypes.map((consultantType) => {\r\n              return (\r\n                <div\r\n                  key={consultantType}\r\n                  className={`button ${\r\n                    this.state.selectedConsultantType === consultantType && 'selected'\r\n                  }`}\r\n                  onClick={(e) => this.handleSelectConsultantType(e)}\r\n                  tabIndex=\"0\"\r\n                >\r\n                  {consultantType === 'gp'\r\n                    ? 'GP'\r\n                    : consultantType.charAt(0).toUpperCase() + consultantType.slice(1)}\r\n                </div>\r\n              );\r\n            })}\r\n          </ScrollContainer>\r\n        </div>\r\n\r\n        <div>\r\n          <h3>\r\n            <span>\r\n              <i className=\"far fa-clock fa-lg\"></i>\r\n            </span>\r\n            Date and Time <span id=\"dateTimeError\">Please select a time slot</span>\r\n          </h3>\r\n          {Object.entries(slotsByDate).map(([date, slots]) => {\r\n            return (\r\n              <div key={date} className=\"fadeContainer\">\r\n                <div className=\"date\"> {moment(date).format('MMM D[:]')}</div>\r\n                <div className=\"fade\"></div>\r\n\r\n                <ScrollContainer className=\"optionsContainer\">\r\n                  {slots.map(\r\n                    (slot, index) =>\r\n                      slot.time !== slots[index - 1]?.time && (\r\n                        <li\r\n                          key={slot.id}\r\n                          className={`button ${\r\n                            this.state.selectedDateTime === slot.time && 'selected'\r\n                          }`}\r\n                          onClick={() => {\r\n                            this.setState({ selectedDateTime: slot.time });\r\n                          }}\r\n                        >\r\n                          {moment(slot.time).format('hh:mm a')}\r\n                        </li>\r\n                      ),\r\n                  )}\r\n                </ScrollContainer>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"fadeContainer\">\r\n          <h3>\r\n            <span>\r\n              <i className=\"fas fa-video fa-lg\"></i>\r\n            </span>\r\n            Appointment Type <span id=\"appointmentError\">Please select an appointment type</span>\r\n          </h3>{' '}\r\n          <div className=\"fade\"></div>\r\n          <ScrollContainer className=\"optionsContainer\">\r\n            {appointmentTypes.map((appointmentType) => (\r\n              <div\r\n                key={appointmentType}\r\n                className={`button ${\r\n                  this.state.selectedAppointmentType === appointmentType && 'selected'\r\n                }`}\r\n                onClick={(e) => this.setState({ selectedAppointmentType: appointmentType })}\r\n              >\r\n                {appointmentType.charAt(0).toUpperCase() + appointmentType.slice(1)}\r\n              </div>\r\n            ))}{' '}\r\n          </ScrollContainer>\r\n        </div>\r\n        <div>\r\n          <h3>\r\n            <span>\r\n              <i className=\"fas fa-pencil-alt fa-lg\"></i>\r\n            </span>\r\n            Notes\r\n          </h3>\r\n          <textarea\r\n            placeholder=\"Describe your symptoms\"\r\n            value={this.state.notes}\r\n            onChange={(e) => this.setState({ notes: e.target.value })}\r\n          />\r\n        </div>\r\n        <div>\r\n          <div\r\n            className=\"button book\"\r\n            onClick={() => {\r\n              this.handleSubmit();\r\n            }}\r\n          >\r\n            Book\r\n          </div>\r\n          <span id=\"generalError\">Please fill missing information</span>\r\n          {this.state.bookingSaved && <span id=\"savedMessage\">Booking saved!</span>}\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateAppointment;\r\n","import React, { Component } from 'react';\r\nimport { API_ENDPOINT } from '../config';\r\nimport moment from 'moment';\r\n\r\nimport './ScheduledAppointments.scss';\r\n\r\nexport class ScheduledAppointments extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      appointments: null,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(`${API_ENDPOINT}/appointments`)\r\n      .then((appointmentsJSON) => appointmentsJSON.json())\r\n      .then((appointments) => {\r\n        this.setState({ appointments: appointments });\r\n      })\r\n      .catch((err) => {});\r\n  }\r\n\r\n  async handleCancel(appointmentId) {\r\n    try {\r\n      const response = await fetch(`${API_ENDPOINT}/appointments`, {\r\n        method: 'DELETE', // *GET, POST, PUT, DELETE,\r\n        mode: 'cors', // no-cors, *cors, same-origin\r\n        cache: 'no-cache',\r\n        credentials: 'same-origin',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer',\r\n        body: JSON.stringify({\r\n          appointmentId,\r\n        }), // body data type must match \"Content-Type\" header\r\n      });\r\n      this.setState({\r\n        appointments: this.state.appointments.filter(\r\n          (appointment) => appointment.id !== appointmentId,\r\n        ),\r\n      });\r\n    } catch (err) {}\r\n  }\r\n  render() {\r\n    return (\r\n      <main>\r\n        <h1>Scheduled Appointments</h1>\r\n        {this.state.appointments?.map((appointment) => (\r\n          <div key={appointment.id} className=\"ScheduledAppointments__appointment\">\r\n            Date:{moment(appointment.dateTime).format('hh:mma MMM D[,] YYYY')}\r\n            <br />\r\n            Consultant type:{appointment.consultantType}\r\n            <br />\r\n            Appointment type:{appointment.appointmentType}\r\n            <br />\r\n            Notes: {appointment.notes}\r\n            <br />\r\n            <button className=\"Scheduled__cancel\" onClick={() => this.handleCancel(appointment.id)}>\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScheduledAppointments;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport CreateAppointment from './routes/CreateAppointment';\r\nimport ScheduledAppointments from './routes/ScheduledAppointments';\r\n\r\nrender(\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<App />}>\r\n          <Route path=\"createappointment\" element={<CreateAppointment />} />\r\n          <Route path=\"scheduledappointments\" element={<ScheduledAppointments />} />\r\n          <Route\r\n            path=\"*\"\r\n            element={\r\n              <main style={{ padding: '1rem' }}>\r\n                <p>There's nothing here!</p>\r\n              </main>\r\n            }\r\n          ></Route>\r\n        </Route>\r\n      </Routes>\r\n    </BrowserRouter>\r\n  ,\r\n\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}